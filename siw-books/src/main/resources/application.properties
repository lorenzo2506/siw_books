spring.application.name=siw-books

#==================================
# = Datasource
#==================================
spring.jpa.database=POSTGRESQL
spring.jpa.show-sql=true
logging.level.org.hibernate.SQL=debug
logging.level.org.hibernate.type.descriptor.sql=trace
spring.jpa.hibernate.ddl-auto=update
spring.datasource.driver-class-name=org.postgresql.Driver
spring.datasource.url=jdbc:postgresql://localhost:5432/siw_books
spring.datasource.username=postgres
spring.datasource.password=Alicandro.02
spring.jpa.properties.hibernate.jdbc.lob.non_contextual_creation=true

#==================================
# = Web server
#==================================
server.port=8080

#==================================
# = Thymeleaf configurations
#==================================
spring.thymeleaf.check-template-location=true
spring.thymeleaf.prefix=classpath:/templates/
spring.thymeleaf.suffix=.html
spring.thymeleaf.servlet.content-type=text/html
spring.thymeleaf.cache=false
spring.thymeleaf.enabled=true
spring.thymeleaf.encoding=UTF-8

spring.messages.basename=messages/messages
spring.messages.encoding=UTF-8



#==================================
# = Google OAuth2 Configuration (SOLO OAuth2 - NO OIDC)
#==================================
spring.security.oauth2.client.registration.google.client-id=196245434866-gdamaeks8vpmhkm8qcpqrs6m0l03ikiu.apps.googleusercontent.com
spring.security.oauth2.client.registration.google.client-secret=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
# IMPORTANTE: scope senza 'openid' per evitare OIDC
spring.security.oauth2.client.registration.google.scope=profile,email
spring.security.oauth2.client.registration.google.redirect-uri={baseUrl}/login/oauth2/code/{registrationId}
spring.security.oauth2.client.registration.google.authorization-grant-type=authorization_code

# Provider personalizzato per forzare OAuth2 standard
spring.security.oauth2.client.provider.google.authorization-uri=https://accounts.google.com/o/oauth2/v2/auth?prompt=select_account
spring.security.oauth2.client.provider.google.token-uri=https://www.googleapis.com/oauth2/v4/token
spring.security.oauth2.client.provider.google.user-info-uri=https://www.googleapis.com/oauth2/v2/userinfo
spring.security.oauth2.client.provider.google.user-name-attribute=email

# OAuth2 Debug
logging.level.org.springframework.security=DEBUG
logging.level.it.uniroma3.siw.oauth2=DEBUG
logging.level.it.uniroma3.siw.service=DEBUG
logging.level.it.uniroma3.siw.controller=DEBUG

#==================================
# = Upload e Session
#==================================
# Configurazione upload immagini


# Configurazione upload immagini
app.image.upload.dir=uploads/images

# Configurazione Spring per upload file
spring.servlet.multipart.max-file-size=5MB
spring.servlet.multipart.max-request-size=25MB
spring.servlet.multipart.enabled=true

server.servlet.response.buffer-size=8KB
server.servlet.session.timeout=30m
server.servlet.session.cookie.http-only=true
server.servlet.session.tracking-modes=cookie

spring.mvc.hiddenmethod.filter.enabled=true